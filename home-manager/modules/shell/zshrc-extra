# Create and change to a directory
take () { mkdir -p -- "$1" && cd -- "$1"; }

# Deploy host with lollypops (without secrets)
ndep () { nix run '.#' -- "$1":deploy-flake "$1":rebuild }

# Create and change to a new temporary directory
ttake () { cd $(mktemp -d) }

# Use `line 10 /etc/hosts` to get 10th line of file
line () { awk "NR == $1" "$2" }

# Bind up and down keys to history matching partial input
bindkey "$terminfo[kcuu1]" history-search-backward
bindkey "$terminfo[kcud1]" history-search-forward

# Init h (https://github.com/zimbatm/h)
eval "$(h --setup ~/code)"

# fzf-compete files with ctrl+t
bindkey -s "^T" 'pazi_cd --pipe="fzf"^M'

# Make tab-completion case-insensitive
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# Start x on first login
# if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
#	startx
# fi

# Self-hosted transfer.sh sharing. Expects ~/.netrc with crendentials in this format:
# machine transfer.0cx.de login my-super-user password super-secret-password

# command | paste
paste () {
	cat | curl -n --upload-file - https://transfer.0cx.de/paste.txt
}

# transfer file.txt
transfer () {
	if [ $# -eq 0 ]
	then
		echo "No arguments specified.\nUsage:\n  transfer <file|directory>\n  ... | transfer <file_name>" >&2
		return 1
	fi
	if tty -s
	then
		file="$1"
		file_name=$(basename "$file")
		if [ ! -e "$file" ]
		then
			echo "$file: No such file or directory" >&2
			return 1
		fi
		if [ -d "$file" ]
		then
			file_name="$file_name.zip" ,
			(
			cd "$file" && zip -r -q - .
			) | curl -n --progress-bar --upload-file "-" "https://transfer.0cx.de/$file_name" | tee /dev/null,
		else
			cat "$file" | curl -n --progress-bar --upload-file "-" "https://transfer.0cx.de/$file_name" | tee /dev/null
		fi
	else
		file_name=$1
		curl -n --progress-bar --upload-file "-" "https://transfer.0cx.de/$file_name" | tee /dev/null
	fi
}
